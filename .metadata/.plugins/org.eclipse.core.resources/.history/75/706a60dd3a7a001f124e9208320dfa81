package com.pm.jns.entity;
import java.util.Date;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "customer_details" , uniqueConstraints = @UniqueConstraint(columnNames = {"cif", "bankCode"}))
public class CustomerDetailsEntity {


	    @Id
	    @GeneratedValue(strategy = GenerationType.SEQUENCE)
	    private Long id;

	    @NotNull
	    @Size(min = 3, max = 17)
	    @Column(name = "account_number", nullable = false)
	    private String accountNumber;

	    @NotNull
	    @Size(min = 3, max = 17)
	    @Column(name = "cif", nullable = false)
	    private String cif;

	    @NotNull
	    @Size(min = 1, max = 300)
	    @Pattern(regexp = "^[a-zA-Z]+[a-zA-Z .'/-]*[a-zA-Z.'/-]*$", message = "Invalid account holder name")
	    @Column(name = "account_holder_name", nullable = false)
	    private String accountHolderName;

	    @NotNull
	    @Size(min = 1, max = 150)
	    @Pattern(regexp = "^[a-zA-Z]+[a-zA-Z .'/-]*[a-zA-Z.'/-]*$", message = "Invalid father/husband name")
	    @Column(name = "father_husband_name", nullable = false)
	    private String fatherHusbandName;

	    @NotNull
	    @Pattern(regexp = "^(M|F|T)$", message = "Gender must be M, F, or T")
	    @Column(name = "gender", nullable = false)
	    private String gender; // Enum could be used here

	    @Size(min = 10, max = 10)
	    @Pattern(regexp = "^[6789]\\d{9}$", message = "Invalid mobile number")
	    @Column(name = "mobile_number")
	    private String mobileNumber;

	    @Size(min = 5, max = 255)
	    @Email(message = "Invalid email format")
	    @Column(name = "email_id")
	    private String emailId;

	    @NotNull
	    @Size(min = 2, max = 500)
	    @Pattern(regexp = "^[a-zA-Z0-9/.,:@#&_=()\\\"'-]+[a-zA-Z0-9/.,: @#&_=()\\\"'-]*[a-zA-Z0-9/.,:@#&_=()\\\"'-]*$", message = "Invalid address line 1")
	    @Column(name = "address_line1", nullable = false)
	    private String addressLine1;

	    @Size(min = 2, max = 500)
	    @Pattern(regexp = "^[a-zA-Z0-9/.,:@#&_=()\\\"'-]+[a-zA-Z0-9/.,: @#&_=()\\\"'-]*[a-zA-Z0-9/.,:@#&_=()\\\"'-]*$", message = "Invalid address line 2")
	    @Column(name = "address_line2")
	    private String addressLine2;

	    @NotNull
	    @Size(min = 2, max = 200)
	    @Pattern(regexp = "^[a-zA-Z0-9][a-zA-Z0-9&,-/.\"\\(\\) ]*$", message = "Invalid city name")
	    @Column(name = "city", nullable = false)
	    private String city;

	    @NotNull
	    @Size(min = 2, max = 200)
	    @Pattern(regexp = "^[a-zA-Z0-9][a-zA-Z0-9&,-/.\"\\(\\) ]*$", message = "Invalid district name")
	    @Column(name = "district", nullable = false)
	    private String district;

	    @NotNull
	    @Size(min = 2, max = 200)
	    @Column(name = "state", nullable = false)
	    private String state;

	    @NotNull
	    @Size(min = 6, max = 6)
	    @Pattern(regexp = "^[1-9][0-9]{5}$", message = "Invalid pincode")
	    @Column(name = "pincode", nullable = false)
	    private String pincode;

	    @Size(min = 2, max = 200)
	    @Column(name = "disability_details")
	    private String disabilityDetails;

	    @NotNull
	    @Size(min = 11, max = 11)
	    @Column(name = "customer_ifsc", nullable = false)
	    private String customerIFSC;

	    @NotNull
	    @Temporal(TemporalType.DATE)
	    @Column(name = "dob", nullable = false)
	    private Date dob;

	    @Pattern(regexp = "^(YES|NO)$", message = "Disability status must be YES or NO")
	    @Column(name = "disability_status")
	    private String disabilityStatus;

	    @Size(min = 1, max = 300)
	    @Column(name = "applicant_occupation")
	    private String applicantOccupation;

		@NotNull
		@Size(min = 1, max = 30)
		@Pattern(regexp = "^(ICI|SBI|HDFC|MAHARASHTRA|CENTRAL|CANARA|UBI|BOB|BOI|IOB|PNB|UCO|IB|PSB|BUPB|VKGB|KARGB|APGVP|JKGB|TNGB)$", message = "Invalid bank code")
		@Column(name = "bank_code", nullable = false)
		private String bankCode;

		@Size(min = 1, max = 30)
		@Pattern(regexp = "^[a-zA-Z0-9]+$", message = "Invalid branch code")
		@Column(name = "branch_code")
		private String branchCode;

	}


